name: Unit Test on Asf-rm

on:
  push:
    branches: [ main, test-automatization ]
  pull_request:
    branches: [ main ]
    
env:
  GITHUB_WORKFLOW: github_actions

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create env variable
      run: |
        touch .env
        echo DJANGO_SECRET_KEY=h^z13$qr_s_wd65@gnj7a=xs7t05$w7q8!x_8zsld# >> .env
        echo POSTGRES_NAME=postgres >> .env
        echo POSTGRES_USER=postgres >> .env
        echo POSTGRES_PASSWORD=postgres >> .env
        echo DB_HOST=localhost >> .env
        cat .env
    - name: Setup migrations
      run: |
        export $(grep -v '^#' .env | xargs)
        python manage.py makemigrations core general cal
        python manage.py migrate
    - name: Run Tests
      env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
      run: |
        export $(grep -v '^#' .env | xargs)
        pytest core/test_views.py   